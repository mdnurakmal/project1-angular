apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: angular
  name: angular
spec:
  replicas: 1
  selector:
    matchLabels:
      app: angular
  template:
    metadata:
      labels:
        app: angular
    spec:
      containers:
        - image: mdnurakmal/project1-angular:latest
          name: project1-angular
          env:
          - name: AUTHSERVER_URL
            value: http://mdnurakmal.com/wschat1
          ports:
          - containerPort: 80
            name: nginx
---

apiVersion: v1
kind: Service
metadata:
  name: angular-service
spec:
  selector:
    app: angular
  type: NodePort
  ports:
    - name: my-https-port
      port: 443
      targetPort: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: managed-cert-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: angular-ip
    networking.gke.io/managed-certificates: managed-cert
    kubernetes.io/ingress.class: "gce"
    beta.cloud.google.com/backend-config: '{"ports": {"8080":"my-backendconfig"}}'
spec:
  rules:
  - host: "mdnurakmal.com"
    http:
      paths:
      - pathType: ImplementationSpecific
        path: "/*"
        backend:
          service:
            name: angular-service
            port:
              number: 443
  - host: "wschat.mdnurakmal.com"
    http:
      paths:
      - pathType: ImplementationSpecific
        path: "/*"
        backend:
          service:
            name: spring-boot-service
            port:
              number: 8080
  - host: "nginx.mdnurakmal.com"
    http:
      paths:
      - pathType: ImplementationSpecific
        path: "/*"
        backend:
          service:
            name: ws-reverse-proxy-service
            port:
              number: 443



---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: managed-cert
spec:
  domains:
    - mdnurakmal.com
    - wschat.mdnurakmal.com
    - nginx.mdnurakmal.com
            
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: my-backendconfig
spec:
  timeoutSec: 1800
  connectionDraining:
    drainingTimeoutSec: 1800
